#cloud-config
users:
  - name: devops
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${SSH_KEY_CONTENT}
package_update: true
package_upgrade: true
write_files:
- encoding: b64
  content: ${B64_DEVOPS_CONTENT}
  owner: devops:devops
  path: /home/devops/devops
  permissions: '0755'
write_files:
- encoding: b64
  content: ${B64_DOCKER_COMPOSE_CONTENT}
  owner: devops:devops
  path: /home/devops/docker-compose.yaml
  permissions: '0644'
write_files:
- encoding: b64
  content: ${B64_DOTENV_CONTENT}
  owner: devops:devops
  path: /home/devops/.env
  permissions: '0600'
packages:
  - fail2ban
  - ufw
  - podman
  - iptables-persistent
runcmd:
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable ssh
  - systemctl enable fail2ban
  - systemctl start fail2ban
  - ufw allow 41641/udp
  - ufw allow 'OpenSSH'
  - ufw enable
  - sed -ie '/^PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -ie '/^PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -ie '/^X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -ie '/^#MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  - sed -ie '/^#AllowTcpForwarding/s/^.*$/AllowTcpForwarding yes/' /etc/ssh/sshd_config
  - sed -ie '/^#AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -ie '/^#AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh/authorized_keys/' /etc/ssh/sshd_config
  - sed -i '$a AllowUsers devops' /etc/ssh/sshd_config
  - systemctl restart ssh
  - sudo systemctl enable --now cni-dhcp.socket
  - curl -fsSL https://tailscale.com/install.sh | sh
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 4433
  - iptables-save > /etc/iptables/rules.v4
  - loginctl enable-linger 'devops'
  - su - devops -c "tailscale up --authkey=${TAILSCALE_AUTH_KEY}"
  - su - devops -c "tailscale cert ${SERVICE_NAME}.${TAILSCALE_DOMAIN}"
  - su - devops -c "uv venv"
  - su - devops -c "uv pip install podman-compose"
  - su - devops -c "chmod 644 ${SERVICE_NAME}.${TAILSCALE_DOMAIN}.key"
  - reboot
